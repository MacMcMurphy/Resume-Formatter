name: build-macos-intel

permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  release:
    types: [published]

jobs:
  build-intel:
    runs-on: macos-12
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify runner arch
        run: uname -m

      - name: Set version/tag
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" && -n "${GITHUB_REF_NAME}" ]]; then
            echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
            echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          else
            VERSION=$(python - <<'PY'
from pathlib import Path
import re
m=re.search(r'APP_VERSION\s*=\s*"([^"]+)"', Path('app/config.py').read_text())
print(m.group(1))
PY
)
            echo "VERSION=${VERSION}" >> $GITHUB_ENV
            echo "TAG=v${VERSION}" >> $GITHUB_ENV
          fi

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install -r requirements.txt pyinstaller==6.10.0

      - name: Diagnostics (python, pip, packages)
        shell: bash
        run: |
          python -V
          uname -a
          pip list

      - name: Verify httpx version (must be 0.27.x)
        shell: bash
        run: |
          python - <<'PY'
import sys
import httpx
v = getattr(httpx, '__version__', '')
print('httpx version:', v)
sys.exit(0 if v.startswith('0.27.') else 1)
PY

      - name: Smoke test OpenAI client init (no network call)
        shell: bash
        env:
          RESUME_FORMATTER_OPENAI_API_KEY: dummy-key
        run: |
          python - <<'PY'
import os
os.environ['RESUME_FORMATTER_OPENAI_API_KEY'] = os.environ.get('RESUME_FORMATTER_OPENAI_API_KEY', 'dummy-key')
from app.services.llm import get_openai_client, reset_openai_client
reset_openai_client()
client = get_openai_client()
print('OpenAI client OK:', type(client))
PY

      - name: Smoke test app health endpoint
        shell: bash
        run: |
          uvicorn app.main:app --host 127.0.0.1 --port 8010 --log-level warning &
          PID=$!
          # wait for server
          for i in {1..30}; do
            curl -sf http://127.0.0.1:8010/api/health && OK=1 && break || sleep 1
          done
          kill $PID || true
          test "$OK" = "1"

      - name: Stage pandoc binary (download x86_64)
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p build/pandoc/mac
          curl -L -o /tmp/pandoc.tar.gz https://github.com/jgm/pandoc/releases/download/3.5/pandoc-3.5-macOS-x86_64.tar.gz
          tar -xzf /tmp/pandoc.tar.gz -C /tmp
          PANDOC_BIN=$(find /tmp -type f -path "*/bin/pandoc" | head -n1)
          cp "$PANDOC_BIN" build/pandoc/mac/pandoc

      - name: Build app (x86_64)
        shell: bash
        run: |
          pyinstaller --name "Resume Formatter" --windowed \
            --add-data "app/views:app/views" \
            --add-data "templates:templates" \
            --collect-all jinja2 \
            --collect-all docx \
            --add-binary "build/pandoc/mac/pandoc:bin" \
            run_app.py

      - name: Zip app
        shell: bash
        run: |
          cd dist
          zip -ry "Resume-Formatter-macOS-x86_64-${{ env.VERSION }}.zip" "Resume Formatter.app"

      - name: Upload artifact (workflow run)
        uses: actions/upload-artifact@v4
        with:
          name: Resume-Formatter-macOS-x86_64-${{ env.VERSION }}
          path: dist/Resume-Formatter-macOS-x86_64-${{ env.VERSION }}.zip

      - name: Upload to GitHub Release (tags only)
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          files: dist/Resume-Formatter-macOS-x86_64-${{ env.VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


